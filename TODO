deserialization with typechecking

type-checking
  - informative errors on failure
  - support type-checking Hash-like objects via [] property access
  - catch and wrap exceptions while getting data to type-check
  - ability to truncate a type to a certain depth as a nicer more general way to do 'type-check this to depth x' rather than the more ad-hoc shallow_type_check stuff

refinements of String, Numeric etc
  - integer ranges
  - enums - sets of allowed values

classes/type tags
  - allow you to specify a constructor block for a class for use when deserializing
  - maybe allow some gentle decoupling between notion of a ruby class and a 'type tag',
    whereby multiple ruby classes can be viewed as implementing the same type tag for
    typing purposes, or potentially vice versa eg Array can be seen as a Tuple or a
    Sequence despite this not technically being sound
  - maybe allow types other than Object to have a custom tag too? eg custom String-based
    types

compute canonicalised intersections
compute canonicalised unions, with untagged unions replaced by a least upper bound

better convenience methods for traversing the type graph and getting info about it
  - refer to clause of a tagged union by class/type tag

ensure annotations play nice with derived types

Typed:
  - way to inherit version types from superclass's version types
  - way to type-check against a version type
